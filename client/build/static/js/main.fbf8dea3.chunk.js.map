{"version":3,"sources":["context/AuthContext.js","hooks/message.hook.js","hooks/http.hook.js","components/Loader.js","pages/CreateGoodPage.js","hooks/createGood.hook.js","pages/AuthPage.js","components/ProductCard.js","pages/ProductsPage.js","pages/ProductDetail.js","hooks/product.hooks.js","context/BasketContext.js","components/BasketCard.js","pages/BasketsPage.js","hooks/basket.hook.js","components/GoodCard.js","styles.js","components/PurchaseCard.js","hooks/purchase.hook.js","pages/BasketDetail.js","pages/GoodsPage.js","pages/CreateProductPage.js","hooks/createProduct.hook.js","pages/PresetsPage.js","pages/CreatePreset.js","components/Navbar.js","App.js","hooks/auth.hooks.js","routes.js","serviceWorker.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useMessage","useCallback","text","window","M","toast","html","useHttp","useState","loading","setLoading","error","setError","message","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","console","log","Error","clearError","Loader","style","position","top","left","zIndex","useStyles","makeStyles","formControl","minWidth","amountField","marginTop","sublimeButton","background","border","borderRadius","boxShadow","color","height","padding","card","title","textAlign","fontSize","CreateGoodPage","styles","useContext","product","amount","good","setGood","products","setProducts","fetchProducts","productsData","createHandler","authorizationStr","Authorization","bindSelect","value","onChange","e","target","bindAmount","parseInt","useCreateGood","useEffect","productItems","map","MenuItem","_id","key","Card","className","Grid","container","spacing","justify","item","xs","FormControl","Select","TextField","label","type","Button","onClick","authCard","AuthPage","auth","email","password","form","setForm","changeHandler","event","name","registerHandler","loginHandler","CardContent","fullWidth","placeholder","CardActions","variant","disabled","marginRight","bullet","display","margin","transform","pos","ProductCard","to","Typography","unitOfMeasure","multiplicity","ProductsPage","loadProducts","listItems","Box","ProductDetail","productId","useParams","id","initialProduct","setProduct","loadProduct","patchProduct","useProduct","BasketContext","React","basketId","setBasketId","BasketCard","basket","ListItem","BasketsPage","baskets","setBaskets","loadBaskets","List","useBasket","goods","total","setBasket","currentBasket","loadBasket","patchBasket","basketId_","addGood","goodId","concat","potenshialPurchase","GoodCard","isGoodInBasket","addToBasket","children","ActionButtons","purchaseStyle","box","multiplier","marginLeft","PurchaseCard","inPurchase","initialPurchase","purchase","setPurchase","bgColor","setBgColor","useMemo","buy","buyHandler","usePurchase","backgroundColor","things","BasketDetail","width","flexDirection","flexWrap","justifyContent","updateButton","pre","GoodsPage","setGoods","loadGoods","includes","CreateProductPage","undefined","useCreateProduct","PresetsPage","presets","setPresets","loadPresets","preset","CreatePreset","Navbar","history","useHistory","currentBasketItem","Link","AppBar","Toolbar","IconButton","preventDefault","push","App","setToken","setUserId","jwtToken","uId","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","appRoutes","setCurrentBasket","Provider","Container","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fbf8dea3.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nfunction noop() {}\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: noop,\n    logout: noop,\n    isAuthenticated: false\n\n})","import {useCallback} from 'react'\n\nexport const useMessage = () => {\n    return useCallback(text => {\n        if (window.M && text) {\n            window.M.toast({ html: text})\n        }\n    }, [])\n}","import {useState, useCallback} from 'react'\nimport { useMessage } from './message.hook'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const message = useMessage()\n\n    const request = useCallback( async (url, method='GET', body=null, headers = {}) => {\n        setLoading(true)\n        try {\n            if (body) {\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n            \n            const response = await fetch(url, {method, body, headers}) \n            const data = await response.json()\n\n            if (!response.ok) {\n                console.log(\"Http Hook:\", data.message);\n                message(`Http Hook: ${data.message.message}`)\n                throw new Error(data.message || \"Что-то пошло не так\")\n                //TODO исправить проброс ошибок\n            }\n\n            setLoading(false)\n\n            return data\n        } catch (e) {\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    }, [])\n\n    const clearError = useCallback(() => setError(null), [])\n\n    return { loading , request, error, clearError }\n}","import React from 'react'\r\n\r\n\r\nexport function Loader() {\r\n    return (\r\n        <div style={{position: 'absolute', top: '50%', left: '50%', zIndex: '2'}}><h2>Loading...</h2></div>\r\n    )\r\n}","import React, { useCallback, useEffect } from 'react'\nimport { useCreateGood } from '../hooks/createGood.hook'\n\nimport { Select, MenuItem, FormControl, Button, TextField, Container, Card, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Loader } from '../components/Loader'\n\nconst useStyles = makeStyles({\n    formControl: {\n        minWidth: 700,\n    },\n\n    amountField: {\n        marginTop: 14,\n    },\n\n    sublimeButton: {\n        marginTop: 10,\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n    },\n\n    card: {\n        marginTop: 14,\n    },\n    title: {\n        marginTop: 14,\n        textAlign: 'center',\n        fontSize: 45\n    }\n})\n\nexport const CreateGoodPage = () => {\n    const styles = useStyles()\n\n    const { products, fetchProducts, bindSelect, bindAmount, good, createHandler, loading } = useCreateGood()\n\n    useEffect(() => {\n        fetchProducts()\n    }, [fetchProducts])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    const productItems = products.map((product) => {\n        return (\n            <MenuItem value={product._id} key={product._id}>{product.title}</MenuItem>\n        )\n    })\n\n    return (\n        <div>\n            <Card className={styles.card}>\n                <Grid container spacing={3} justify='center'>\n                    <Grid item xs={12}>\n                        <div className={styles.title}>Страница создания товара</div>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <FormControl className={styles.formControl}>\n                            <Select {...bindSelect}>\n                                {productItems}\n                            </Select>\n                            <TextField className={styles.amountField} {...bindAmount} label=\"Количество продукта в товаре\" type=\"number\" />\n                            <Button className={styles.sublimeButton} onClick={createHandler}>Создать</Button>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={8}>\n                        <pre>{JSON.stringify(good, null, 2)}</pre>\n                    </Grid>\n                </Grid>\n            </Card>\n        </div>\n    )\n}","import { useState, useCallback, useContext } from 'react'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from './message.hook'\n\nexport const useCreateGood = () => {\n    const { token } = useContext(AuthContext)\n    const message = useMessage()\n\n    const [good, setGood] = useState({\n        product: null,\n        amount: 0\n    })\n\n    const [products, setProducts] = useState([])\n    const [product, setProduct] = useState()\n\n\n    const { loading, error, request, clearError } = useHttp()\n\n    const fetchProducts = useCallback( async () => {\n        try {\n            const productsData = await request('api/products')\n            setProducts(productsData)\n        } catch (e) {\n            console.log(\"ERROR -> Load Products: \", e);\n        }\n    }, [request])\n\n    const selectHanlder = (e) => {\n        setGood({\n            ...good,\n            product: e.target.value\n        })\n    }\n\n    const amountHandler = (e) => {\n        setGood({\n            ...good,\n            amount: parseInt(e.target.value)\n        })\n    }\n\n    const createHandler = async () => {\n        try {\n            const authorizationStr = `Bearer ${token}`\n            await request('api/goods', 'POST', good, {\n                Authorization: authorizationStr\n            })\n            message(\"Товар успешно создан!\")\n        } catch (e) {\n            console.log(\"ERROR -> Create Good: \", e);\n        }\n    }\n\n    return {\n        products,\n        fetchProducts,\n        bindSelect: {value: product, onChange: selectHanlder},\n        bindAmount: {value: good.amount, onChange: amountHandler},\n        good,\n        createHandler,\n        loading\n    }\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { FormControl, Button, Container, Card, CardContent, makeStyles, Grid, CardActions, TextField } from '@material-ui/core';\n\nimport { Loader } from '../components/Loader'\nimport { AuthContext } from '../context/AuthContext'\n\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\n\n\nconst useStyles = makeStyles({\n    authCard: {\n        marginTop: 34\n    },\n    title: {\n        fontSize: 43,\n        textAlign: 'center'\n    },\n})\n\nexport const AuthPage = () => {\n    const styles = useStyles()\n\n    const auth = useContext(AuthContext)\n    const message = useMessage()\n    const { loading, error, request, clearError } = useHttp()\n\n    const [form, setForm] = useState({\n        email: '', password: ''\n    });\n\n    useEffect(() => {\n        message(error)\n        clearError()\n    }, [error, message, clearError])\n\n    const changeHandler = event => {\n        setForm({ ...form, [event.target.name]: event.target.value })\n    }\n\n    const registerHandler = async () => {\n        try {\n            const data = await request('/api/auth/register/', 'POST', { ...form })\n            message(data.message)\n            console.log('Register Data:', data)\n        } catch (e) {\n            // Уже обработали в http.hook\n        }\n    }\n\n    const loginHandler = async () => {\n        try {\n            const data = await request('/api/auth/login/', 'POST', { ...form })\n            auth.login(data.token, data.userId)\n        } catch (e) {\n            console.log('Login Handler:', e)\n        }\n    }\n\n    if (loading) {\n        return <Loader></Loader>\n    }\n\n\n    return (\n        <Grid container justify='center' xs={12}>\n            <Grid item xs={4}>\n                <Card className={styles.authCard}>\n                    <CardContent>\n                        <div className={styles.title}>SHOP LIST</div>\n                        <TextField fullWidth label=\"Email\" placeholder=\"Введите email\" type=\"text\" name=\"email\" onChange={changeHandler} />\n                        <TextField fullWidth label=\"Пароль\" placeholder=\"Введите пароль\" type=\"password\" name=\"password\" onChange={changeHandler} />\n                        <CardActions>\n                            <Button variant='outlined' disabled={loading} style={{ marginRight: 10 }} onClick={loginHandler}>Войти</Button>\n                            <Button variant='outlined' disabled={loading} onClick={registerHandler}>Регистрация</Button>\n                        </CardActions>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Typography, CardContent, CardActions, Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 275,\n        marginTop: 9\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 16,\n    },\n    pos: {\n        marginTop: 12,\n    },\n});\n\n\nexport const ProductCard = ({ product }) => {\n    const styles = useStyles()\n\n    return (\n        <Card className={styles.card}>\n            <Link to={`/product/${product._id}`}>\n                <CardContent>\n                    <div className={styles.title}>\n                        {product.title}\n                    </div>\n                    <Typography>\n                        Единицы измерения: {product.unitOfMeasure}\n                    </Typography>\n                    <Typography className={styles.title}>\n                        Множитель: {product.multiplicity}\n                    </Typography>\n                </CardContent>\n            </Link>\n        </Card>\n    )\n}","import React, { useEffect, useCallback, useState } from 'react'\nimport { Box, List, ListItem } from '@material-ui/core';\n\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\n\nimport { Loader } from '../components/Loader'\nimport { ProductCard } from '../components/ProductCard'\n\n\n\n\nexport const ProductsPage = () => {\n\n    const { loading, error, request, clearError } = useHttp()\n    const message = useMessage()\n\n    const [products, setProducts] = useState([])\n\n    const loadProducts = useCallback(async () => {\n        try {\n            const data = await request('api/products')\n            message(\"Список продуктов загружен!\")\n            setProducts(data)\n        } catch (e) {\n            // Уже обработали в http.hook\n        }\n    }, [request, message])\n\n    useEffect(() => {\n        loadProducts()\n    }, [loadProducts])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    const listItems = products.map((product) =>\n        <ProductCard key={product._id} product={product}></ProductCard>\n    );\n\n    return (\n        <div>\n            <h1>Список cуществующих продуктов</h1>\n            <Box>\n                {listItems}    \n            </Box>\n        </div>\n    )\n}","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { useMessage } from '../hooks/message.hook'\n\nimport { Loader } from '../components/Loader'\n\nimport { useProduct } from '../hooks/product.hooks'\n\n\nexport const ProductDetail = () => {\n\n    const message = useMessage()\n\n    const productId = useParams().id\n\n    const { product, loadProduct, onChange, patchProduct, loading } = useProduct([])\n\n\n    useEffect(() => {\n        loadProduct(productId)\n    }, [loadProduct])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    return (\n        <div>\n            <h1>Product Detail</h1>\n            <div>\n                Название: <input type=\"text\" name=\"title\" value={product.title} onChange={onChange}></input>\n            </div>\n            <div>\n                <div style={{ textAlign: 'center' }}>Единицы измерения: </div>\n                <div><input type=\"text\" name=\"unitOfMeasure\" value={product.unitOfMeasure} onChange={onChange}></input></div>\n            </div>\n            <div>\n                <div style={{ textAlign: 'center' }}>Кратность </div>\n                <div><input type=\"text\" name=\"multiplicity\" value={product.multiplicity} onChange={onChange}></input></div>\n            </div>\n            <div>\n                <button className=\"btn\" onClick={() => patchProduct(productId)}>Обновить</button>\n            </div>\n            <pre>{JSON.stringify(product, null, 2)}</pre>\n        </div>\n    )\n}","import { useState, useCallback } from 'react'\nimport { useHttp } from '../hooks/http.hook'\n\nexport const useProduct = (initialProduct) => {\n    const [product, setProduct] = useState(initialProduct)\n    \n    const { loading, error, request, clearError } = useHttp()\n\n    const onChange = event => {\n        const target = event.target\n        const name = target.name\n        const value = target.value\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const loadProduct = useCallback(async (productId) => {\n        try {\n            const data = await request(`/api/products/${productId}`)\n            setProduct(data)\n        } catch (e) {\n            // Уже обработали в http.hook\n        }\n    }, [request])\n\n    const patchProduct = (async (productId) => {\n        console.log(\"Patch Product\");\n        try {\n            await request(`/api/products/${productId}`, 'POST', product)\n        } catch (e) {\n            // Уже обрабатывали\n        }\n    })\n\n\n    return {\n        product,\n        loadProduct,\n        onChange,\n        patchProduct,\n        loading,\n    }\n}","import React from 'react'\n\n\nfunction noop() {}\n\nexport const BasketContext = React.createContext({\n    basketId: null,\n    setBasketId: noop\n})\n","import React, { useContext } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardActions, Button, ListItem } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\n\nimport { BasketContext } from '../context/BasketContext'\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 700,\n        marginTop: 9\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginTop: 12,\n    },\n    //TODO стили\n});\n\n\nexport const BasketCard = ({ basket }) => {\n    const styles = useStyles()\n\n    // х\n    const { setBasketId } = useContext(BasketContext)\n\n    return (\n        <ListItem key={basket._id}>\n            <Card className={styles.card}>\n                <CardContent>\n                    <Link to={`/basket/${basket._id}`}>{basket.title} ID: {basket._id}</Link>\n                    <CardActions className={styles.pos}>\n                        <Button\n                            variant=\"outlined\"\n                            onClick={() => setBasketId(basket._id)}\n                        >Установить текущую корзину</Button>\n                    </CardActions>\n                </CardContent>\n            </Card>\n        </ListItem>\n\n    )\n}","import React, { useEffect, useCallback, useState, useContext } from 'react'\nimport { List, ListItem, Button } from '@material-ui/core';\n\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\n\nimport { AuthContext } from '../context/AuthContext'\n\nimport { Loader } from '../components/Loader'\nimport { BasketCard } from '../components/BasketCard';\n\n\nexport const BasketsPage = () => {\n\n    const { loading, error, request, clearError } = useHttp()\n    const { token } = useContext(AuthContext)\n    const message = useMessage()\n\n    const [baskets, setBaskets] = useState([])\n\n    const loadBaskets = useCallback(async () => {\n        try {\n            const authorizationStr = `Bearer ${token}`\n            console.log(\"Auth Str:\", authorizationStr);\n            const data = await request('api/baskets', 'GET', null, {\n                Authorization: authorizationStr\n            })\n            message(\"Список корзин загружен!\")\n            console.log(\"Data:\", data);\n            setBaskets(data)\n        } catch (e) {\n            // Уже обработали в http.hook\n            console.log(\"Basket Page -> errors:\", e);\n        }\n    }, [request, token, message])\n\n    useEffect(() => {\n        loadBaskets()\n    }, [loadBaskets])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    const listItems = baskets.map((basket) =>\n        <BasketCard key={basket._id} basket={basket}></BasketCard>\n    );\n    return (\n        <div>\n            <h1>Список корзин</h1>\n            <List>\n                {listItems}\n            </List>\n        </div>\n    )\n}","import { useState, useEffect, useContext, useCallback } from 'react'\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\n\nimport { BasketContext } from '../context/BasketContext'\n\n\nexport const useBasket = () => {\n    const [basket, setBasket] = useState({\n        title: \"\",\n        goods: [],\n        total: 0,\n    })\n\n    const message = useMessage()\n\n    //x\n    const { basketId } = useContext(BasketContext)\n\n    \n    const { loading, error, request, clearError } = useHttp()\n\n    const onChange = event => {\n        const target = event.target\n        const name = target.name\n        const value = target.value\n        setBasket({\n            ...basket,\n            [name]: value\n        })\n    }\n\n    // возвращает текущую выбранную корзину или null в случае ее отсутствия\n    let currentBasket = basket?.title ? basket.title : null\n\n    const loadBasket = useCallback(async (basketId) => {\n        try {\n            const data = await request(`/api/baskets/${basketId}`)\n            setBasket(data)\n        } catch (e) {\n            // Уже обработали в http.hook\n        }\n    }, [request])\n\n    const patchBasket = (async (basketId_) => {\n        console.log(\"Patch Basket:\", basket);\n        try {\n            await request(`/api/baskets/${basketId_}`, 'POST', basket)\n            message(\"Корзина успешно обновлена!\")\n        } catch (e) {\n            // Уже обрабатывали\n        }\n    })\n\n    const addGood = (async (goodId) => {\n        console.log(\"Add Good\", basket.goods.concat(goodId));\n        // setBasket({\n        //     ...basket,\n        //     goods: basket.goods.concat(goodId)\n        // })\n        const potenshialPurchase ={\n            good: goodId,\n        }\n        try {\n            await request(`/api/baskets/${basketId}/addGood`, 'POST', potenshialPurchase)\n            message(\"Товар успешно добавлен в корзину!\")\n            loadBasket(basketId)\n        } catch (e) {\n            \n        }\n\n    })\n    //x\n    useCallback(() => {\n        console.log(\"Here\");\n        patchBasket(basketId)\n    }, [basket.goods])\n\n\n    return {\n        basket,\n        loadBasket,\n        onChange,\n        patchBasket,\n        loading,\n        currentBasket,\n        addGood,\n    }\n}","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardActions, Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n    marginTop: 9\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginTop: 12,\n  },\n});\n\n\nexport const GoodCard = ({ good, isGoodInBasket, addToBasket, children }) => {\n  const styles = useStyles()\n\n  function ActionButtons() {\n    if (isGoodInBasket) {\n      return <Button>Товар в корзине</Button>\n    } else {\n      return <Button variant=\"outlined\" color=\"primary\"\n          onClick={() => addToBasket(good._id)}\n          >В корзину</Button>\n      }\n  }\n\n\n  return (\n    <Card className={styles.card}>\n      <CardContent>\n        <span className={styles.title}>{good.product.title} {good._id}</span>\n        <div>Количество: {good.amount} {good.product.unitOfMeasure}</div>\n        {/* <pre>{JSON.stringify(good, null, 2)}</pre> */}\n        <CardActions className={styles.pos}>\n          <Button variant=\"outlined\">Изменить</Button>\n          <ActionButtons></ActionButtons>\n        </CardActions>\n        {children}\n      </CardContent>\n    </Card>\n  )\n}","export const purchaseStyle = {\n    bought: '#76ff03',\n    buy: '#00b0ff'\n}","import React, { useContext } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardActions, Button, ListItem, Box } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\nimport { GoodCard } from './GoodCard';\n\nimport { usePurchase } from '../hooks/purchase.hook'\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 300,\n        marginTop: 9\n    },\n    box: {\n        display: 'flex',\n\n    },\n    multiplier: {\n        marginLeft: 14,\n        fontSize: 34,\n    }\n    //TODO стили\n});\n\n\nexport const PurchaseCard = ({ inPurchase }) => {\n    const styles = useStyles()\n\n    const { purchase, bgColor, buyHandler } = usePurchase(inPurchase)\n\n    return (\n        <Card className={styles.card}>\n            <CardContent style={{backgroundColor: bgColor}}>\n                <Box className={styles.box}>\n                    <GoodCard good={purchase.good}></GoodCard>\n                    <div className={styles.multiplier}> X {purchase.things}</div>\n                    {/* <pre>{JSON.stringify(purchase, null, 2)}</pre> */}\n                    <Button variant=\"outlined\" onClick={buyHandler}>{purchase.buy ? 'Куплено!' : 'Купить!'}</Button>\n                </Box>\n                \n            </CardContent>\n        </Card>\n\n    )\n}","import { useState, useCallback, useMemo } from 'react'\nimport { useHttp } from '../hooks/http.hook'\n\nimport { purchaseStyle } from '../styles' \n\nexport const usePurchase = (initialPurchase) => {\n    const [purchase, setPurchase] = useState(initialPurchase)\n    const { loading, error, request, clearError } = useHttp()\n    const [bgColor, setBgColor] = useState(purchaseStyle.buy) // цвет фона товара в корзине\n\n    useMemo(() => {\n        purchase.buy ? setBgColor(purchaseStyle.bought) : setBgColor(purchaseStyle.buy)\n    }, [purchase]) \n\n    const buyHandler = () => {\n        setPurchase({\n            ...purchase,\n            buy: !purchase.buy\n        })\n    }\n\n    return {\n        purchase,\n        bgColor,\n        buyHandler,\n        loading,\n    }\n}","import React, { useEffect } from 'react'\nimport { List, ListItem, Box, Button } from '@material-ui/core';\nimport { Link, useParams } from 'react-router-dom'\n\nimport { useMessage } from '../hooks/message.hook'\n\nimport { Loader } from '../components/Loader'\n\nimport { useBasket } from '../hooks/basket.hook'\nimport { PurchaseCard } from '../components/PurchaseCard'\n\nexport const BasketDetail = () => {\n\n    const message = useMessage()\n\n    const basketId = useParams().id\n\n    const { basket, loadBasket, onChange, patchBasket, loading } = useBasket([])\n\n\n    useEffect(() => {\n        loadBasket(basketId)\n    }, [loadBasket])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    const listItems = basket.goods.map((purchase) =>\n        <Box key={purchase._id}>\n            <PurchaseCard inPurchase={purchase}>\n                <Button variant=\"outlined\">Купить</Button>\n            </PurchaseCard>\n        </Box>\n    );\n\n    return (\n        <div>\n            <h1>Корзина</h1>\n            <div>\n                Название: <input type=\"text\" name=\"title\" value={basket.title} onChange={onChange}></input>\n            </div>\n            <div>\n                <Button variant='outlined' color=\"secondary\" onClick={() => patchBasket(basketId)}>Обновить</Button>\n            </div>\n            <Box>\n                {listItems}\n            </Box>\n            <pre>{JSON.stringify(basket, null, 2)}</pre>\n        </div>\n    )\n}\n","import React, { useEffect, useCallback, useState, useContext } from 'react'\nimport { List, ListItem, Box, Button } from '@material-ui/core';\n// список товаров\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\n\nimport { AuthContext } from '../context/AuthContext'\nimport { BasketContext } from '../context/BasketContext'\n\nimport { Loader } from '../components/Loader'\nimport { GoodCard } from '../components/GoodCard'\nimport { useBasket } from '../hooks/basket.hook'\n\n\nconst useStyles = makeStyles({\n    box: {\n      marginTop: 9,\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'start'\n    },\n    card: {\n        marginLeft: 7,\n        marginRight: 7,\n        minWidth: 320\n    },\n    updateButton: {\n        marginTop: 14,\n        marginLeft: 7\n    },\n    title: {\n      fontSize: 48,\n      marginTop: 14,\n      marginLeft: 7,\n    },\n    pre: {\n        marginLeft: 7\n    },\n    pos: {\n      marginTop: 12,\n    },\n  });\n\n//TODO проверка сущестования (выбора) корзины\nexport const GoodsPage = () => {\n    const styles = useStyles()\n\n    const { loading, error, request, clearError } = useHttp()\n    const { token } = useContext(AuthContext)\n    const message = useMessage()\n\n    const [goods, setGoods] = useState([])\n\n    //x\n    const { basketId } = useContext(BasketContext)\n    const { basket, loadBasket, addGood, patchBasket } = useBasket()\n\n    useEffect(() => {\n        loadBasket(basketId)\n    }, [loadBasket, basketId])\n\n    const loadGoods = useCallback(async () => {\n        try {\n            const authorizationStr = `Bearer ${token}`\n            console.log(\"Auth Str:\", authorizationStr);\n            const data = await request('api/goods', 'GET', null, {\n                Authorization: authorizationStr\n            })\n            message(\"Список товаров загружен!\")\n            console.log(\"Data:\", data);\n            setGoods(data)\n        } catch (e) {\n            // Уже обработали в http.hook\n        }\n    }, [request, message])\n\n    useEffect(() => {\n        loadGoods()\n    }, [loadGoods]) //x\n\n    if (loading) {\n        return <Loader />\n    }\n\n    const listItems = goods.map((good) =>\n        <Box className={styles.card} key={good._id}>\n            {/* <Link to={`/good/${good._id}`}>{good.title}</Link> */}\n            <GoodCard good={good} isGoodInBasket={basket.goods.includes(good._id)} addToBasket={addGood}></GoodCard>\n        </Box>\n    );\n    return (\n        <div>\n            <div className={styles.title}>Список товаров</div>\n            <Box className={styles.box}>\n                {listItems}\n            </Box>\n\n            <Button className={styles.updateButton} variant=\"outlined\" color=\"primary\" onClick={() => patchBasket(basketId)}>Обновить корзину</Button>\n            <pre className={styles.pre}>{JSON.stringify(basket, null, 2)}</pre>\n        </div>\n    )\n}","import React, { useCallback, useEffect } from 'react'\nimport { useCreateProduct } from '../hooks/createProduct.hook'\n\nimport { Select, MenuItem, FormControl, Button, TextField, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Loader } from '../components/Loader'\n\nconst useStyles = makeStyles({\n    formControl: {\n        minWidth: 700,\n    },\n\n    amountField: {\n        marginTop: 14,\n    },\n\n    sublimeButton: {\n        marginTop: 10,\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n    },\n    title: {\n        textAlign: 'center',\n        fontSize: 45\n    }\n})\n\nexport const CreateProductPage = () => {\n    const style = useStyles()\n\n    const { product, onChange, createHandler, loading } = useCreateProduct()\n\n    if (loading) {\n        return <Loader />\n    }\n\n\n    return (\n        <div>\n            <Grid container spacing={3} justify='center'>\n                <Grid item xs={12}>\n                    <div className={style.title}>Страница создания продукта</div>\n                </Grid>\n                \n                <Grid item xs={8} >\n                    <FormControl className={style.formControl}>\n                        {/* TODO попробовать примерить SPRED оператор */}\n                        <TextField className={style.amountField} value={product.title} onChange={onChange} name=\"title\" label=\"Название продукта\" type=\"text\" />\n                        <TextField className={style.amountField} value={product.unitOfMeasure} onChange={onChange} name=\"unitOfMeasure\" label=\"Единицы измерения\" type=\"text\" />\n                        <TextField className={style.amountField} value={product.multiplicity} onChange={onChange} name=\"multiplicity\" label=\"Множитель\" type=\"number\" />\n                        <Button className={style.sublimeButton} onClick={createHandler}>Создать</Button>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={8}>\n                    <pre>{JSON.stringify(product, null, 2)}</pre>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import { useState, useCallback, useContext } from 'react'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from './message.hook'\n\nexport const useCreateProduct = () => {\n    const message = useMessage()\n\n    const [product, setProduct] = useState({\n        title: \"\",\n        unitOfMeasure: undefined,\n        multiplicity: 1\n    })\n\n    const { loading, error, request, clearError } = useHttp()\n\n    const onChange = event => {\n        const target = event.target\n        const name = target.name\n        const value = target.value\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const createHandler = async () => {\n        try {\n            await request('api/products', 'POST', product)\n            message(\"Продукт успешно создан!\")\n        } catch (e) {\n            console.log(\"ERROR -> Create Product: \", e);\n        }\n    }\n\n    return {\n        product,\n        onChange,\n        createHandler,\n        loading\n    }\n}\n","import React, { useEffect, useState, useCallback, useContext } from 'react'\nimport { List, ListItem, Box, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AuthContext } from '../context/AuthContext'\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\nimport { Loader } from '../components/Loader';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles({\n    box: {\n      marginTop: 9,\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'start'\n    },\n  });\n\n\nexport const PresetsPage = () => {\n    const styles = useStyles()\n    const { loading, request } = useHttp()\n    const message = useMessage()\n    const [presets, setPresets] = useState([])\n    const { token } = useContext(AuthContext)\n\n    const loadPresets = useCallback(async () => {\n        try {\n            const authorizationStr = `Bearer ${token}`\n            const data = await request('api/presets', 'GET', null, {\n                Authorization: authorizationStr\n            })\n            message(\"Список пресетов загружен!\")\n            setPresets(data)\n        } catch (e) {\n            // Уже обработали в http.hook\n        }\n    }, [request, message]) //x\n\n    useEffect(() => {\n        loadPresets()\n    }, [])\n\n    const listItems = presets.map(preset => \n        <ListItem>\n            <Link to={`/preset/${preset._id}`}>\n                {preset.title}\n            </Link>\n        </ListItem>\n    )\n\n\n    if (loading) {\n        return <Loader />\n    }\n    return (\n        <div>\n            <h1>Presets Page</h1>\n            <List>\n                {listItems}\n            </List>\n            <pre>{JSON.stringify(presets, null, 2)}</pre>\n        </div>\n    )\n}","import React from 'react'\n\nexport const CreatePreset = () => {\n\n    return (\n        <div>\n            <h1>Страница создания пресета</h1>\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { AppBar, Typography, IconButton, Button, Toolbar, Link, MenuItem } from '@material-ui/core';\n\nimport { AuthContext } from '../context/AuthContext'\nimport { BasketContext } from '../context/BasketContext'\n\n\n\nexport const Navbar = () => {\n    const history = useHistory()\n    const auth = useContext(AuthContext)\n\n    const { basketId } = useContext(BasketContext)\n\n    const logoutHandler = (e) => {\n        e.preventDefault()\n        auth.logout()\n        history.push('/')\n    }\n\n    const currentBasketItem = (\n        <div>\n            {basketId ? <Link to={`/basket/${basketId}`}>Текущая корзина: {basketId}</Link> : 'Текущая корзина: Не определена'}\n        </div>\n    )\n\n    return (\n        <nav>\n            <AppBar position='static'>\n                <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <IconButton>SHOP LIST</IconButton>\n                        <MenuItem><NavLink to=\"/create\">Создать товар</NavLink></MenuItem>\n                        <NavLink to=\"/create-product\">Создать продукт</NavLink>\n                        <NavLink to=\"/create-preset\">Создать пресет</NavLink>\n                        <NavLink to=\"/products\">Список продуктов</NavLink>\n                        <NavLink to=\"/goods\">Товары</NavLink>\n                        <NavLink to=\"/presets\">Пресеты</NavLink>\n                        <NavLink to=\"/baskets\">Корзины</NavLink>\n                        {currentBasketItem}\n                    <Button onClick={logoutHandler}>Выйти</Button>\n                </Toolbar>\n            </AppBar>\n        </nav>\n    )\n}","import React, { useContext, useState } from 'react';\nimport 'materialize-css'\nimport { BrowserRouter } from 'react-router-dom'\nimport { appRoutes } from './routes'\nimport { useAuth } from './hooks/auth.hooks';\nimport { Navbar } from './components/Navbar';\n\nimport { AuthContext } from './context/AuthContext';\nimport { BasketContext } from './context/BasketContext'\nimport { Container } from '@material-ui/core';\n\nexport default function App() {\n  const { token, login, logout, userId } = useAuth()\n  const isAuthenticated = !!token\n  const routes = appRoutes(isAuthenticated)\n\n  //\n  const [currentBasket, setCurrentBasket] = useState(null)\n\n\n  return (\n    <AuthContext.Provider value={{\n      token, login, logout, userId, isAuthenticated\n    }}>\n      <BasketContext.Provider value={{\n        basketId: currentBasket, \n        setBasketId: setCurrentBasket \n      }}>\n        <BrowserRouter>\n          {isAuthenticated && <Navbar></Navbar>}\n          <Container>\n            {routes}\n          </Container>\n        </BrowserRouter>\n      </BasketContext.Provider>\n    </AuthContext.Provider>\n  )\n}\n","import { useState, useCallback, useEffect } from 'react'\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null)\n    const [userId, setUserId] = useState(null)\n\n    const login = useCallback((jwtToken, uId) => {\n        setToken(jwtToken)\n        setUserId(uId)\n\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: uId, token: jwtToken\n        }))\n    }, [])\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName))\n\n        if (data && data.token) {\n            login(data.token, data.userId)\n        }\n    }, [login])\n\n    return { login, logout, token, userId }\n}","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport { CreateGoodPage } from './pages/CreateGoodPage'\nimport { AuthPage } from './pages/AuthPage'\nimport { ProductsPage } from './pages/ProductsPage'\nimport { ProductDetail } from './pages/ProductDetail'\nimport { BasketsPage } from './pages/BasketsPage'\nimport { BasketDetail } from './pages/BasketDetail'\nimport { GoodsPage } from './pages/GoodsPage'\nimport { CreateProductPage } from './pages/CreateProductPage'\nimport { PresetsPage } from './pages/PresetsPage'\nimport { CreatePreset } from './pages/CreatePreset'\n\n\nexport const appRoutes = (isAuthenticated) => {\n    if (isAuthenticated) {\n        return (\n            <Switch>\n                <Route path='/create' exact>\n                    <CreateGoodPage />\n                </Route>\n                <Route path='/products' exact>\n                    <ProductsPage></ProductsPage>\n                </Route>\n                <Route path='/create-product' exact>\n                    <CreateProductPage />\n                </Route>\n                <Route path='/product/:id'>\n                    <ProductDetail></ProductDetail>\n                </Route>\n                <Route path='/baskets' exact>\n                    <BasketsPage></BasketsPage>\n                </Route>\n                <Route path='/basket/:id'>\n                    <BasketDetail></BasketDetail>\n                </Route>\n                <Route path='/goods' exact>\n                    <GoodsPage></GoodsPage>\n                </Route>\n                <Route path='/presets' exact>\n                    <PresetsPage></PresetsPage>\n                </Route>\n                <Route path=\"/create-preset\" exact>\n                    <CreatePreset></CreatePreset>\n                </Route>\n                <Redirect to=\"/baskets\" />\n            </Switch>\n        )\n    }\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact >\n                <AuthPage />\n            </Route>\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}